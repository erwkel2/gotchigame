{"version":3,"sources":["containers/BabyGame/index.jsx","actions/initialize.jsx","actions/login.jsx","actions/logout.jsx","containers/NavBar/index.jsx","components/TokenBalances.jsx","containers/Home/index.jsx","actions/openMenu.jsx","containers/App/index.jsx","store/index.jsx","reducers/scene.jsx","reducers/user.jsx","reducers/moralis.jsx","index.jsx"],"names":["box","INITIALIZE","LOGIN","ERROR","LOGOUT","useStyles","makeStyles","theme","root","backgroundColor","flexGrow","connect","state","scene","user","moralis","userLogin","dispatch","a","type","userLogout","userWallet","initialize","props","useMoralis","authenticate","logout","isAuthenticated","Web3Api","isInitialized","useMoralisWeb3Api","account","getTokenBalances","chain","then","tokenBalance","console","log","authPrompt","Button","onClick","onSuccess","onError","classes","className","AppBar","position","color","Toolbar","disableGutters","onSceneReady","camera","FreeCamera","Vector3","setTarget","Zero","canvas","getEngine","getRenderingCanvas","attachControl","HemisphericLight","intensity","MeshBuilder","CreateBox","size","y","CreateGround","width","height","onRender","undefined","deltaTimeInMillis","getDeltaTime","rotation","Math","PI","antialias","id","TokenBalances","balances","Home","Container","component","maxWidth","CssBaseline","Typography","variant","this","username","BabyGame","Component","OPEN_MENU","gameTheme","createTheme","palette","mode","secondary","main","primary","typography","fontFamily","h4","fontWeight","subtitle1","responsiveFontSizes","App","ThemeProvider","path","withRouter","store","createStore","combineReducers","action","profile","applyMiddleware","thunk","ReactDOM","render","appId","serverUrl","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b1c324ea.chunk.js","sourcesContent":["import React from \"react\";\nimport { FreeCamera, Vector3, HemisphericLight, MeshBuilder } from \"@babylonjs/core\";\n//import SceneComponent from \"./SceneComponent\"; // uses above component in same directory\nimport SceneComponent from 'babylonjs-hook'; // if you install 'babylonjs-hook' NPM.\n\n\nlet box;\n\nconst onSceneReady = (scene) => {\n  // This creates and positions a free camera (non-mesh)\n  let camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\n\n  // This targets the camera to scene origin\n  camera.setTarget(Vector3.Zero());\n\n  const canvas = scene.getEngine().getRenderingCanvas();\n\n  // This attaches the camera to the canvas\n  camera.attachControl(canvas, true);\n\n  // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n  let light = new HemisphericLight(\"light\", new Vector3(0, 1, 0), scene);\n\n  // Default intensity is 1. Let's dim the light a small amount\n  light.intensity = 0.7;\n\n  // Our built-in 'box' shape.\n  box = MeshBuilder.CreateBox(\"box\", { size: 2 }, scene);\n\n  // Move the box upward 1/2 its height\n  box.position.y = 1;\n\n  // Our built-in 'ground' shape.\n  MeshBuilder.CreateGround(\"ground\", { width: 6, height: 6 }, scene);\n};\n\n/**\n * Will run on every frame render.  We are spinning the box on y-axis.\n */\nconst onRender = (scene) => {\n  if (box !== undefined) {\n    let deltaTimeInMillis = scene.getEngine().getDeltaTime();\n\n    const rpm = 10;\n    box.rotation.y += (rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000);\n  }\n};\n\nexport default () => (\n  <div>\n    <SceneComponent antialias onSceneReady={onSceneReady} onRender={onRender} id=\"my-canvas\" />\n  </div>\n);\n","export const INITIALIZE = 'INITIALIZE';\nexport const ERROR = 'ERROR';\n\nexport const initialize = (moralis) => async dispatch => {\n\n  dispatch({type: INITIALIZE});\n}\n\n","import { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nexport const LOGIN = 'LOGIN';\nexport const ERROR = 'ERROR';\n\nexport const userLogin = () => async dispatch => {\n  if ('moralis-success' == 'moralis-success') {\n    dispatch({type: LOGIN});\n  } else {\n    dispatch({type: ERROR});\n  }\n}\n\n","export const LOGOUT = 'LOGOUT';\nexport const ERROR = 'ERROR';\n\nexport const userLogout = (userWallet) => async dispatch => {\n  \n  // if moralis logout success\n  if ('moralis-success' == 'moralis-success') \n    dispatch({type: LOGOUT});\n  else\n    dispatch({type: ERROR});\n}\n\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/styles';\nimport { withStyles } from '@material-ui/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Box from '@material-ui/core/Box';\n\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nimport {connect} from 'react-redux';\n\nimport {initialize} from '../../actions/initialize';\nimport {userLogin} from '../../actions/login';\nimport {userLogout} from '../../actions/logout';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: 'orange',\n    flexGrow: 1,\n  },\n}));\n\n\nconst NavBar = (props) => {\n  const { authenticate, isAuthenticated, logout, user, isInitialized } = useMoralis();\n  \n  const Web3Api = useMoralisWeb3Api();\n  if (props.moralis.isInitialized && props.user.isAuthenticated) {\n    //x = Web3Api.account.getTokenBalances();\n    //Web3Api.account.getNativeBalance\n    Web3Api.account.getTokenBalances({chain:'kovan'}).then((tokenBalance) => {\n      console.log(tokenBalance);\n    })\n  };\n\n  const printUser = () => {\n    console.log(props.user);\n    console.log(props.moralis);\n  };\n\n  const userLogin = () => {\n    authenticate({\n      onSuccess: () => props.userLogin(),\n      onError: () => {\n        props.userLogout()\n      }\n    });\n  };\n  \n  const userLogout = () => {\n    logout({\n      onSuccess: () => props.userLogout(),\n      onError: () => {\n        props.userLogout()\n      }\n    });\n  };\n\n  const authPrompt = props.user.isAuthenticated ? <Button onClick={() => userLogout()}>logout</Button> : <Button onClick={() => userLogin()}>Login</Button>;\n  \n  const classes = useStyles();\n  return (\n  <div className={classes.root}>\n    <AppBar position=\"static\" color=\"secondary\" className={classes.root}>\n      <Toolbar disableGutters={true} className={classes.root}>\n        {authPrompt}\n        <Button onClick={() => printUser()}>Print user</Button>\n      </Toolbar>      \n    </AppBar>\n  </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    scene: state.scene,\n    user: state.user,\n    moralis: state.moralis\n  };\n};\n\nexport default connect(mapStateToProps, { userLogin, userLogout, initialize})(NavBar);\n","import React from 'react';\n\nconst TokenBalances = (props) => {\n\n\n  // must loop through the balances, so that we can see\n  // we need to have a similar component that does the same for all the gotchis\n  return (\n    <p>\n      {props.balances}\n    </p>\n  )\n}\n\nexport default TokenBalances;\n","import React, { Suspense, Component } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport BabyGame from '../BabyGame'\nimport Typography from '@material-ui/core/Typography';\nimport {connect} from 'react-redux';\n\nimport TokenBalances from '../../components/TokenBalances';\n\nclass Home extends Component {\n  \n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"md\">\n        <CssBaseline />\n        <Typography component=\"h2\" variant=\"h4\" color=\"primary\">\n          Welcome {this.props.user.username}\n        </Typography>\n        <TokenBalances balances={'lol balances?'}></TokenBalances>\n        <BabyGame></BabyGame>\n        <h1>{this.props.user.isAuthenticated}</h1>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    scene: state.scene,\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Home);\n","export const OPEN_MENU = 'OPEN_MENU';\nexport const MENU_ERROR = 'MENU_ERROR';\n\nexport const openMenu = (buttonPress) => async dispatch => {\n  \n  // try to create menu scene, then send open_menu message if successful\n  // for now just open menu when it's called correctly\n  \n\n  if (buttonPress == 'open-menu') \n    dispatch({type: OPEN_MENU});\n  else\n    dispatch({type: MENU_ERROR});\n}\n\n","import * as Phaser from 'phaser';\nimport React, { Component } from 'react';\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\n\nimport { ThemeProvider, createTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport NavBar from '../NavBar'\nimport Home from '../Home'\n\nimport {connect} from 'react-redux';\nimport {openMenu} from '../../actions/openMenu';\nimport { withRouter } from \"react-router\";\n\nlet gameTheme = createTheme({\n  palette: {\n    mode: 'light',\n    secondary: {\n      main: 'rgba(0,0,0,1)',\n    },\n    primary: {\n      main: 'rgba(128,0,128, 1)',\n    },\n  },\n  typography: {\n    fontFamily: [ 'Helvetica', 'Arial', 'sans-serif'],\n    h4: {\n      fontWeight: 700,\n    },\n    subtitle1: {\n      color: 'rgba(104, 104, 104, 1)'\n    },\n  }\n});\n\ngameTheme = responsiveFontSizes(gameTheme);\n\nclass App extends Component {\n\n  \n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n  }\n\n\n  \n  render() {\n    return (\n      <ThemeProvider theme={gameTheme}>\n        <NavBar user={this.props.user}></NavBar>\n        <Switch>\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    scene: state.scene,\n    user: state.user,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {})(App));\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { scene } from '../reducers/scene';\nimport { user } from '../reducers/user';\nimport { moralis } from '../reducers/moralis';\n\nconst store = createStore(combineReducers({scene, user, moralis}), applyMiddleware(thunk));\n\n\nexport default store;\n","import { OPEN_MENU } from '../actions/openMenu.jsx'\nimport { MENU_ERROR } from '../actions/openMenu.jsx'\n\nconst scene = (state = {scene: 'start'}, action) => {\n  switch (action.type) {\n      // swap orgs, imagine a recommended orgs section\n      /* case CLEAR_ORG:\n       *   return {data: null, orgId: null, error: false} */\n    case OPEN_MENU:\n      return {scene: 'menu'};\n    default:\n      return state;\n  }\n}\n\nexport { scene };\n","import { LOGIN } from '../actions/login.jsx';\nimport { LOGOUT } from '../actions/logout.jsx';\nimport { ERROR } from '../actions/login.jsx';\n\nconst user = (state = {profile: null, isAuthenticated: null, username: null}, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {profile: null, isAuthenticated: true, username: 'Frank Smith'};\n    case LOGOUT:\n      return {profile:null, isAuthenticated: false, username: null};\n    case ERROR:\n      return {profile: null, isAuthenticated: false, username: null}\n    default:\n      return state;\n  }\n}\n\nexport {user};\n","import { INITIALIZE } from '../actions/initialize.jsx';\nimport { ERROR } from '../actions/login.jsx';\n\nconst moralis = (state = {isInitialized: null}, action) => {\n  switch (action.type) {\n    case INITIALIZE:\n      return {isInitialized: true};\n    default:\n      return state;\n  }\n}\n\nexport {moralis};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { MoralisProvider } from \"react-moralis\";\nimport { Provider } from 'react-redux';\n\nimport store from './store/index.jsx';\n\nReactDOM.render(<Provider store={store}>\n  <MoralisProvider appId=\"asdfjljfoasfd\" serverUrl=\"https://aofisjdf\">\n    <React.StrictMode>\n      <Router basename=\"/\">\n        <App />\n      </Router>\n    </React.StrictMode>\n  </MoralisProvider>\n</Provider>, document.getElementById('root')\n);\n"],"sourceRoot":""}